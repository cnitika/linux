
📡 The Command Line Messenger: How I Sent Messages from My Linux Terminal

*“No apps. No distractions. Just raw terminal power.”*

This is the story of how I turned my Linux terminal into a universal communication hub — sending messages across the world with a few lines of code.

📬 Chapter 1: The Terminal Sends an Email

"Can I send an email without opening Gmail?"  
Yes. With just one command.

Step 1: Install `mailutils`
sudo apt install mailutils

Step 2: Send an email like a hacker:
echo "Hello from Linux terminal!" | mail -s "Subject Goes Here" recipient@example.com

✅ Make sure you’ve configured Postfix or use a service like msmtp for Gmail integration.

💬 Chapter 2: WhatsApp — Through the Twilio Gateway

"Can I ping my friend on WhatsApp via terminal?"  
Yes, using Twilio and Python.

Step 1: Install Twilio Python SDK
pip install twilio

Step 2: Python Script (save as whatsapp_send.py)
from twilio.rest import Client

sid = 'YOUR_TWILIO_SID'
token = 'YOUR_TWILIO_AUTH_TOKEN'
client = Client(sid, token)

client.messages.create(
    from_='whatsapp:+14155238886',
    body='Hello from Linux Terminal!',
    to='whatsapp:+91xxxxxxxxxx'
)

Run it:
python3 whatsapp_send.py

🐦 Chapter 3: Tweeting from the Terminal

“Let’s tweet like it’s 1995… but in style.”

Step 1: Install the CLI tool `t` (Twitter terminal client)
gem install t

Authenticate with Twitter OAuth (done once).

Step 2: Tweet directly:
t update "Tweeting from my Linux terminal like a pro. #LinuxLife"

📱 Chapter 4: SMS — No Phone Needed

Send an SMS using Twilio CLI:
twilio api:core:messages:create   --from +1234567890   --to +91xxxxxxxxxx   --body "This SMS came from my Linux terminal!"

✅ Replace numbers with your Twilio verified number & recipient.

🔒 Bonus: Secure Your API Keys
Always store sensitive tokens in environment variables:
export TWILIO_SID=xxxx
export TWILIO_TOKEN=yyyy


